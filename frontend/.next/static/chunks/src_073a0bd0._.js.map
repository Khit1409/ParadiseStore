{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/all-projects/ParadiseStore/frontend/src/redux/menuSlice.ts"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\ninterface MenuState {\n  responsive: boolean;\n}\n\nconst initialState: MenuState = {\n  responsive: false,\n};\n\nconst menuSlice = createSlice({\n  name: \"menu\",\n  initialState,\n  reducers: {\n    openResponsive: (state, action) => {\n      state.responsive = action.payload;\n    },\n  },\n});\n\nexport default menuSlice.reducer;\nexport const { openResponsive } = menuSlice.actions;\n"],"names":[],"mappings":";;;;AAAA;;AAMA,MAAM,eAA0B;IAC9B,YAAY;AACd;AAEA,MAAM,YAAY,CAAA,GAAA,8LAAA,CAAA,cAAW,AAAD,EAAE;IAC5B,MAAM;IACN;IACA,UAAU;QACR,gBAAgB,CAAC,OAAO;YACtB,MAAM,UAAU,GAAG,OAAO,OAAO;QACnC;IACF;AACF;uCAEe,UAAU,OAAO;AACzB,MAAM,EAAE,cAAc,EAAE,GAAG,UAAU,OAAO","debugId":null}},
    {"offset": {"line": 36, "column": 0}, "map": {"version":3,"sources":["file:///D:/all-projects/ParadiseStore/frontend/src/redux/globalStore.ts"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\nimport menuReducer from \"./menuSlice\";\nexport const globalStore = configureStore({\n  reducer: {\n    menus: menuReducer,\n  },\n});\n\nexport type RootState = ReturnType<typeof globalStore.getState>;\nexport type AppDispatch = typeof globalStore.dispatch;\n"],"names":[],"mappings":";;;AAAA;AACA;;;AACO,MAAM,cAAc,CAAA,GAAA,8LAAA,CAAA,iBAAc,AAAD,EAAE;IACxC,SAAS;QACP,OAAO,4HAAA,CAAA,UAAW;IACpB;AACF","debugId":null}},
    {"offset": {"line": 57, "column": 0}, "map": {"version":3,"sources":["file:///D:/all-projects/ParadiseStore/frontend/src/redux/provider.tsx"],"sourcesContent":["\"use client\";\n\nimport { Provider } from \"react-redux\";\nimport { globalStore } from \"./globalStore\";\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nexport function ReduxProvider({ children }: Props) {\n  return <Provider store={globalStore}>{children}</Provider>;\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AASO,SAAS,cAAc,EAAE,QAAQ,EAAS;IAC/C,qBAAO,6LAAC,4JAAA,CAAA,WAAQ;QAAC,OAAO,8HAAA,CAAA,cAAW;kBAAG;;;;;;AACxC;KAFgB","debugId":null}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file:///D:/all-projects/ParadiseStore/frontend/src/app/AppRender.tsx"],"sourcesContent":["\"use client\";\nimport React, { useEffect, useState } from \"react\";\n\ninterface Props {\n  children: React.ReactNode;\n}\n\n//giải quyết lỗi error runtime\nexport default function AppRender({ children }: Props) {\n  const [isMount, setIsmount] = useState(false);\n\n  useEffect(() => {\n    setIsmount(true);\n  }, []);\n\n  if (!isMount) {\n    return null;\n  }\n  return <div>{children}</div>;\n}\n"],"names":[],"mappings":";;;;AACA;;;AADA;;AAQe,SAAS,UAAU,EAAE,QAAQ,EAAS;;IACnD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;+BAAE;YACR,WAAW;QACb;8BAAG,EAAE;IAEL,IAAI,CAAC,SAAS;QACZ,OAAO;IACT;IACA,qBAAO,6LAAC;kBAAK;;;;;;AACf;GAXwB;KAAA","debugId":null}}]
}